print ("2+3");
print ("2"+"3");
print (2+3);
??iris
datasets::iris
datasets::iris
print (2+3)
print ("amol")
print (amol)
print ("amol"+"s")
print ("amol","s")
print ("amol"."s")
print("amol","suraj")
data("iris")
dta<-("iris")
dta
summary(iris)
summary(dta)
summary(iris)
??rf
librar(randomForest)
library(randomForest)
install.packages("randomForest")
library(randomForest)
2=2
2+2
install.packages("ggplot2")
install.packages("e1071")
install.packages("rpart")
install.packages("igraph")
install.packages("kernlab")
load("ggplot2")
library(ggplot2)
search()
install.packages("devtools")
library("devtools")
library("devtools")
find_rtools()
install.packages("KernSmooth")
clc
install.packages("caret")
1=2
library("xlsx")
dat<-read.xlsx("./data/2.xlsx",rowIndex=18:23,colIndex=7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
dat<-read.xlsx("./data/2.xlsx",sheetIndex=1,rowIndex=18:23,colIndex=7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx","./data/2.xlsx")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx","./data/2.xlsx")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx","./data/2.xlsx")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx","./2.xlsx")
dat<-read.xlsx("./2.xlsx",sheetIndex=1,rowIndex=18:23,colIndex=7:15)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx","./2.xlsx",mod="wb")
dat<-read.xlsx("./2.xlsx",sheetIndex=1,rowIndex=18:23,colIndex=7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
library("XML")
install.packages("XML")
library("XML")
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(fileurl,useInternal=TRUE)
rootnode<-xmlRoot(doc)
xmlName(rootnode)
fileurl<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(fileurl,useInternal=TRUE)
rootnode<-xmlRoot(doc)
xmlName(rootnode)
xmlpathSApply(rootnode,"//zipcode",21231)
xmlPathSApply(rootnode,"//zipcode",21231)
?xmlInternalTreeParse
xmlName(rootnode[[1]])
xmlName(rootnode[[1]][[1]])
xmlName(rootnode)
xmlName(rootnode[[1]])
names(rootnode[[1]])
xmlName(rootnode[[1]])
xmlName(rootnode[[1]][[1]])
names(rootnode[[1]][[1]])
zipcode<-xpathSApply(rootNode, "//zipcode", xmlValue)
zipcode<-xpathSApply(rootnode, "//zipcode", xmlValue)
table(zipcode == 21231)
table(zipcode)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","./data/2.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","./2.csv")
fread
fread("./2.csv")
library("data.table")
?fread
f<-fread("./2.csv")
DT<-fread("./2.csv")
?message
check <- function(y, t) {
message(sprintf("Elapsed time: %.10f", t[3]))
print(y)
}
system.time(y <- sapply(split(DT$pwgtp15, DT$SEX), mean))
y
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
getwd()
1>2
0.04>0.02
0.07<0.10
library(data.table)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile="./microdata3.csv")
DT <- fread("./microdata3.csv")
file.info("./microdata3.csv")$size
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15))+system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2]
)
rm(list=ls())
?diag
setwd("D:/Data Science Certification/datasciencecoursera/5_Reproducable Research/Assignment 2")
data <- read.csv("StormData.csv.bz2")
rm(DT)
rm(f)
rm(dat)
rm(iris)
dim(data)
str(data)
storm_damage <- select(data, BGN_DATE,STATE, EVTYPE,
FATALITIES, INJURIES, PROPDMG, PROPDMGEXP,CROPDMG,CROPDMGEXP)
library(dplyr)
library(ggplot2)
library(knitr)
storm_damage <- select(data, BGN_DATE,STATE, EVTYPE,
FATALITIES, INJURIES, PROPDMG, PROPDMGEXP,CROPDMG,CROPDMGEXP)
str(storm_damage)
head(storm_damage,100)
storm_damage$PROP_US <- ifelse(storm_damage$PROPDMGEXP =="H" | storm_damage$PROPDMGEXP =="h",
storm_damage$PROPDMG*0.0000001, storm_damage$PROP_US)
storm_damage$CROP_US <- ifelse(storm_damage$CROPDMGEXP =="H"|  storm_damage$CROPDMGEXP =="h",
storm_damage$CROPDMG*0.0000001, storm_damage$CROP_US)
storm_damage$PROP_US <- ifelse(storm_damage$PROPDMGEXP =="K"|  storm_damage$PROPDMGEXP =="k",
storm_damage$PROPDMG*0.000001,  storm_damage$PROP_US)
storm_damage$CROP_US <- ifelse(storm_damage$CROPDMGEXP =="K"|  storm_damage$CROPDMGEXP =="k",
storm_damage$CROPDMG*0.000001,  storm_damage$CROP_US)
storm_damage$PROP_US <- ifelse(storm_damage$PROPDMGEXP =="M"|  storm_damage$PROPDMGEXP =="m",
storm_damage$PROPDMG*0.001,     storm_damage$PROP_US)
storm_damage$CROP_US <- ifelse(storm_damage$CROPDMGEXP =="M"|  storm_damage$CROPDMGEXP =="m",
storm_damage$CROPDMG*0.001,     storm_damage$CROP_US)
storm_damage$PROP_US <- ifelse(storm_damage$PROPDMGEXP =="B"|  storm_damage$PROPDMGEXP =="b",
storm_damage$PROPDMG*1,         storm_damage$PROP_US)
storm_damage$CROP_US <- ifelse(storm_damage$CROPDMGEXP =="B"|  storm_damage$CROPDMGEXP =="b",
storm_damage$CROPDMG*1,         storm_damage$CROP_US)
storm_damage$PROP_US <- 0
storm_damage$CROP_US <- 0
storm_damage$damage  <- 0
storm_damage$health  <- 0
storm_damage$PROP_US <- ifelse(storm_damage$PROPDMGEXP =="H" | storm_damage$PROPDMGEXP =="h",
storm_damage$PROPDMG*0.0000001, storm_damage$PROP_US)
storm_damage$CROP_US <- ifelse(storm_damage$CROPDMGEXP =="H"|  storm_damage$CROPDMGEXP =="h",
storm_damage$CROPDMG*0.0000001, storm_damage$CROP_US)
storm_damage$PROP_US <- ifelse(storm_damage$PROPDMGEXP =="K"|  storm_damage$PROPDMGEXP =="k",
storm_damage$PROPDMG*0.000001,  storm_damage$PROP_US)
storm_damage$CROP_US <- ifelse(storm_damage$CROPDMGEXP =="K"|  storm_damage$CROPDMGEXP =="k",
storm_damage$CROPDMG*0.000001,  storm_damage$CROP_US)
storm_damage$PROP_US <- ifelse(storm_damage$PROPDMGEXP =="M"|  storm_damage$PROPDMGEXP =="m",
storm_damage$PROPDMG*0.001,     storm_damage$PROP_US)
storm_damage$CROP_US <- ifelse(storm_damage$CROPDMGEXP =="M"|  storm_damage$CROPDMGEXP =="m",
storm_damage$CROPDMG*0.001,     storm_damage$CROP_US)
storm_damage$PROP_US <- ifelse(storm_damage$PROPDMGEXP =="B"|  storm_damage$PROPDMGEXP =="b",
storm_damage$PROPDMG*1,         storm_damage$PROP_US)
storm_damage$CROP_US <- ifelse(storm_damage$CROPDMGEXP =="B"|  storm_damage$CROPDMGEXP =="b",
storm_damage$CROPDMG*1,         storm_damage$CROP_US)
head(storm_damage,100)
health <- aggregate(storm_damage$health, by=list(storm_damage$EVTYPE), FUN = sum)
health <- arrange(health, desc(x))
health <- head(health,10)
health
health <- transform( health, Group.1 = reorder(Group.1, order(x, decreasing =TRUE)))
health <- select(health, Event_Type = Group.1, Number_of_Injuries= x)
health
health <- aggregate(storm_damage$health, by=list(storm_damage$EVTYPE), FUN = sum)
head(storm_damage,100)
storm_damage$health <- storm_damage$FATALITIES + storm_damage$INJURIES
storm_damage$damage <- storm_damage$PROP_US + storm_damage$CROP_US
health <- aggregate(storm_damage$health, by=list(storm_damage$EVTYPE), FUN = sum)
health <- arrange(health, desc(x))
health <- head(health,10)
health
health <- select(health, Event_Type = Group.1, Number_of_Injuries= x)
health
storm_PDMG <- aggregate(storm_damage$damage, by=list(storm_damage$EVTYPE), FUN = sum)
storm_PDMG <- arrange(storm_PDMG, desc(x))
storm_PDMG <- head(storm_PDMG,10)
storm_PDMG <- select(storm_PDMG, Event_Type = Group.1, Economic_Impact= x)
health
storm_PDMG
g<- ggplot(health, aes(Event_Type, Number_of_Injuries)) +
labs(title="Total Fatalities & Injuries") +
xlab("") + ylab("Number of injuries")
plot1<- g + geom_bar(colour="red", stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot1)
print(plot2)
g<- ggplot(storm_PDMG, aes(Event_Type, Economic_Impact)) +
labs(title="Total Properties & Crop Damages") +
xlab("") + ylab("U$ Billions")
plot2<- g + geom_bar(colour="red", stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot2)
storm_PDMG <- arrange(storm_PDMG, desc(x))
?tranform
?transform
health <- aggregate(storm_damage$health, by=list(storm_damage$EVTYPE), FUN = sum)
health <- arrange(health, desc(x))
health <- head(health,10)
health
health <- arrange(health, desc(x))
health <- head(health,10)
health
g<- ggplot(health, aes(reorder(Event_Type,-Number_of_Injuries), Number_of_Injuries)) +
labs(title="Total Fatalities & Injuries") +
xlab("") + ylab("Number of injuries")
plot1<- g + geom_bar(colour="red", stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot1)
health <- aggregate(storm_damage$health, by=list(storm_damage$EVTYPE), FUN = sum)
health <- arrange(health, desc(x))
health <- head(health,10)
#health <- transform( health, Group.1 = reorder(Group.1, order(x, decreasing =TRUE)))
health <- select(health, Event_Type = Group.1, Number_of_Injuries= x)
g<- ggplot(health, aes(reorder(Event_Type,-Number_of_Injuries), Number_of_Injuries)) +
labs(title="Total Fatalities & Injuries") +
xlab("") + ylab("Number of injuries")
plot1<- g + geom_bar(colour="red", stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot1)
?geom_bar
g<- ggplot(health, aes(reorder(Event_Type,-Number_of_Injuries), Number_of_Injuries)) +
labs(title="Total Fatalities & Injuries") +
xlab("") + ylab("Number of injuries")
plot1<- g + geom_bar(colour=Number_of_Injuries, stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot1)
g<- ggplot(health, aes(reorder(Event_Type,-Number_of_Injuries), Number_of_Injuries)) +
labs(title="Total Fatalities & Injuries") +
xlab("") + ylab("Number of injuries")
plot1<- g + geom_bar(colour="Number_of_Injuries", stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot1)
g<- ggplot(health, aes(reorder(Event_Type,-Number_of_Injuries), Number_of_Injuries)) +
labs(title="Total Fatalities & Injuries") +
xlab("") + ylab("Number of injuries")
plot1<- g + geom_bar(fill=Number_of_Injuries, stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot1)
g<- ggplot(health, aes(reorder(Event_Type,-Number_of_Injuries), Number_of_Injuries)) +
labs(title="Total Fatalities & Injuries") +
xlab("") + ylab("Number of injuries")
plot1<- g + geom_bar(color=Number_of_Injuries, stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot1)
g<- ggplot(health, aes(reorder(Event_Type,-Number_of_Injuries), Number_of_Injuries)) +
labs(title="Total Fatalities & Injuries") +
xlab("") + ylab("Number of injuries")
plot1<- g + geom_bar(color="red", stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot1)
p <- qplot(Event_Type, Number_of_Injuries, data = health,
stat='identity',geom = "bar", fill= EVTYPE,
xlab="Top 10 events",ylab="Casualties",
main="Casualties due to severe weather events\nin the U.S from 1950-2011")
p <- qplot(Event_Type, Number_of_Injuries, data = health,
geom = "bar", fill= EVTYPE,
xlab="Top 10 events",ylab="Casualties",
main="Casualties due to severe weather events\nin the U.S from 1950-2011")
print(p)
p <- qplot(Event_Type, Number_of_Injuries, data = health,
geom = "bar", fill= Event_Type,
xlab="Top 10 events",ylab="Casualties",
main="Casualties due to severe weather events\nin the U.S from 1950-2011")
print(p)
p <- qplot(Event_Type, Number_of_Injuries, data = health,
stat='identity', geom = "bar", fill= Event_Type,
xlab="Top 10 events",ylab="Casualties",
main="Casualties due to severe weather events\nin the U.S from 1950-2011")
print(p)
g<- ggplot(health, aes(reorder(Event_Type,-Number_of_Injuries), Number_of_Injuries),
fill=Number_of_Injuries) +
labs(title="Total Fatalities & Injuries") +
xlab("") + ylab("Number of injuries")
plot1<- g + geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot1)
g<- ggplot(health, aes(reorder(Event_Type,-Number_of_Injuries), Number_of_Injuries)) +
labs(title="Total Fatalities & Injuries") +
xlab("") + ylab("Number of injuries")
plot1<- g + geom_bar(aes(fill=Number_of_Injuries),stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot1)
g<- ggplot(health, aes(reorder(Event_Type,-Number_of_Injuries), Number_of_Injuries)) +
labs(title="Total Fatalities & Injuries") +
xlab("") + ylab("Number of injuries")
plot1<- g + geom_bar(aes(fill=Event_Type),stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot1)
g<- ggplot(storm_PDMG, aes(Event_Type, Economic_Impact)) +
labs(title="Total Properties & Crop Damages") +
xlab("") + ylab("U$ Billions")
plot2<- g + geom_bar(aes(fill=Event_Type), stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot2)
g<- ggplot(health, aes(reorder(Event_Type,-Number_of_Injuries), Number_of_Injuries)) +
labs(title="Total Fatalities & Injuries") +
xlab("") + ylab("Number of injuries")
plot1<- g + geom_bar(aes(fill=Event_Type),stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot1)
g<- ggplot(storm_PDMG, aes(reorder(Event_Type,-Economic_Impact), Economic_Impact)) +
labs(title="Total Properties & Crop Damages") +
xlab("") + ylab("U$ Billions")
plot2<- g + geom_bar(aes(fill=Event_Type), stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(plot2)
View(storm_damage)
View(storm_damage)
?read.csv
rm(list=ls(0))
rm(list=ls())
